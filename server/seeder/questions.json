[
    {
        "title": "Two Sum",
        "description": "Given an array of integers `nums` and an integer `target`, return indices of the two numbers such that they add up to `target`. You may assume that each input would have exactly one solution, and you may not use the same element twice. You can return the answer in any order.",
        "category": "Arrays",
        "difficulty": "Easy"
    },
    {
        "title": "Reverse a String",
        "description": "Write a function that reverses a string. The input string is given as an array of characters `s`. You must do this by modifying the input array in-place with O(1) extra memory.",
        "category": "Strings",
        "difficulty": "Easy"
    },
    {
        "title": "Maximum Depth of Binary Tree",
        "description": "Given the `root` of a binary tree, return its maximum depth. A binary tree's maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.",
        "category": "Trees",
        "difficulty": "Easy"
    },
    {
        "title": "FizzBuzz",
        "description": "Given an integer `n`, return a string array `answer` (1-indexed) where: `answer[i] == 'FizzBuzz'` if `i` is divisible by 3 and 5. `answer[i] == 'Fizz'` if `i` is divisible by 3. `answer[i] == 'Buzz'` if `i` is divisible by 5. `answer[i] == i` (as a string) if none of the above conditions are true.",
        "category": "General",
        "difficulty": "Easy"
    },
    {
        "title": "Valid Parentheses",
        "description": "Given a string `s` containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid. An input string is valid if: Open brackets must be closed by the same type of brackets. Open brackets must be closed in the correct order. Every close bracket has a corresponding open bracket of the same type.",
        "category": "Strings",
        "difficulty": "Medium"
    }
]